{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achra\\\\OneDrive\\\\Bureau\\\\TrafficAnalyser-main\\\\front\\\\src\\\\components\\\\Map.tsx\",\n  _s = $RefreshSig$();\nimport { MapContainer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/images/marker-shadow.png\";\nimport { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport CustomMarker from \"./CustomMarker\";\nimport data from \"../data/posts\";\nimport { useTheme } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = props => {\n  _s();\n  const theme = useTheme();\n  const [mapState, setMapState] = useState({\n    lat: 44.80416345,\n    lng: -0.599976,\n    zoom: 14\n  });\n  const [firstRender, setFirstRender] = useState(true);\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      setMapState({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n        zoom: 6\n      });\n    });\n  }\n\n  // Change the value of map-tiles class when theme changes\n\n  const [markers, setMarkers] = useState(data);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"w-full h-full rounded-md\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      id: \"map\",\n      center: [mapState.lat, mapState.lng],\n      zoom: mapState.zoom,\n      scrollWheelZoom: true,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        borderRadius: \"5px\"\n      },\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(CustomMarker, {\n        title: marker.title,\n        type: marker.type,\n        position: [marker.location.latitude, marker.location.longitude]\n      }, marker.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"dWtpAgmkexyQCG2GodyyAiE2btA=\", false, function () {\n  return [useTheme];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["MapContainer","useState","Box","CustomMarker","data","useTheme","Map","props","theme","mapState","setMapState","lat","lng","zoom","firstRender","setFirstRender","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","markers","setMarkers","height","width","borderRadius","map","marker","title","type","location"],"sources":["C:/Users/achra/OneDrive/Bureau/TrafficAnalyser-main/front/src/components/Map.tsx"],"sourcesContent":["import { MapContainer, TileLayer, TileLayerProps } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/images/marker-shadow.png\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport CustomMarker from \"./CustomMarker\";\nimport data from \"../data/posts\";\nimport Fullscreen from \"react-leaflet-fullscreen-plugin\";\nimport { useTheme } from \"@mui/material\";\n\ntype Props = {\n    children?: React.ReactNode;\n};\n\nconst Map = (props: Props) => {\n    const theme = useTheme();\n    const [mapState, setMapState] = useState({\n        lat: 44.80416345,\n        lng: -0.599976,\n        zoom: 14,\n    });\n    const [firstRender, setFirstRender] = useState(true);\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setMapState({\n                lat: position.coords.latitude,\n                lng: position.coords.longitude,\n                zoom: 6,\n            });\n        });\n    }\n\n\n    // Change the value of map-tiles class when theme changes\n\n\n    const [markers, setMarkers] = useState(data);\n\n    return (\n        <Box className=\"w-full h-full rounded-md\">\n            <MapContainer\n                id=\"map\"\n                center={[mapState.lat, mapState.lng]}\n                zoom={mapState.zoom}\n                scrollWheelZoom={true}\n                style={{ height: \"100%\", width: \"100%\", borderRadius: \"5px\" }}\n            >\n               \n                {markers.map((marker) => (\n                    <CustomMarker\n                        key={marker.title}\n                        title={marker.title}\n                        type={marker.type}\n                        position={[\n                            marker.location.latitude,\n                            marker.location.longitude,\n                        ]}\n                    />\n                ))}\n            </MapContainer>\n        </Box>\n    );\n};\n\nexport default Map;\n\n"],"mappings":";;AAAA,SAASA,YAAY,QAAmC,eAAe;AACvE,OAAO,0BAA0B;AACjC,OAAO,uCAAuC;AAC9C,SAA4BC,QAAQ,QAAQ,OAAO;AACnD,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,eAAe;AAEhC,SAASC,QAAQ,QAAQ,eAAe;AAAC;AAMzC,MAAMC,GAAG,GAAIC,KAAY,IAAK;EAAA;EAC1B,MAAMC,KAAK,GAAGH,QAAQ,EAAE;EACxB,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACrCU,GAAG,EAAE,WAAW;IAChBC,GAAG,EAAE,CAAC,QAAQ;IACdC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,IAAIe,SAAS,CAACC,WAAW,EAAE;IACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;MACnDT,WAAW,CAAC;QACRC,GAAG,EAAEQ,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BT,GAAG,EAAEO,QAAQ,CAACC,MAAM,CAACE,SAAS;QAC9BT,IAAI,EAAE;MACV,CAAC,CAAC;IACN,CAAC,CAAC;EACN;;EAGA;;EAGA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAACG,IAAI,CAAC;EAE5C,oBACI,QAAC,GAAG;IAAC,SAAS,EAAC,0BAA0B;IAAA,uBACrC,QAAC,YAAY;MACT,EAAE,EAAC,KAAK;MACR,MAAM,EAAE,CAACK,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAACG,GAAG,CAAE;MACrC,IAAI,EAAEH,QAAQ,CAACI,IAAK;MACpB,eAAe,EAAE,IAAK;MACtB,KAAK,EAAE;QAAEY,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAA,UAG7DJ,OAAO,CAACK,GAAG,CAAEC,MAAM,iBAChB,QAAC,YAAY;QAET,KAAK,EAAEA,MAAM,CAACC,KAAM;QACpB,IAAI,EAAED,MAAM,CAACE,IAAK;QAClB,QAAQ,EAAE,CACNF,MAAM,CAACG,QAAQ,CAACX,QAAQ,EACxBQ,MAAM,CAACG,QAAQ,CAACV,SAAS;MAC3B,GANGO,MAAM,CAACC,KAAK;QAAA;QAAA;QAAA;MAAA,QAQxB;IAAC;MAAA;MAAA;MAAA;IAAA;EACS;IAAA;IAAA;IAAA;EAAA,QACb;AAEd,CAAC;AAAC,GAhDIxB,GAAG;EAAA,QACSD,QAAQ;AAAA;AAAA,KADpBC,GAAG;AAkDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}