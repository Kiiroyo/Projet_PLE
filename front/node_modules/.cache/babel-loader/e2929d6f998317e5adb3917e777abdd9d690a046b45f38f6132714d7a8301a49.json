{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\achra\\\\OneDrive\\\\Bureau\\\\TrafficAnalyser-main\\\\front\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport { Typography, Select, MenuItem } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport Card from \"./Card\";\nimport Map from \"./Map\";\nimport BarChartExample from \"./charts/Barcharts\";\nimport RadarChart from \"./charts/Radarcharts\";\nimport SpeedChart from \"./charts/SpeedChart\";\nimport { getAllDirections, getDataByDirection } from \"../services/averageTrafficByHour\";\nimport { getDataByDirectionDate } from \"../services/averageTrafficByDate\";\nimport { getAllDates, getPostsByDate } from \"../services/numberOfVehiclesPerPost\";\nimport { getEntryExitByDate } from \"../services/entryExit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [date, setDate] = React.useState(new Date().toLocaleDateString());\n  const [value, setValue] = React.useState(new Date());\n  const availableDates = getAllDates();\n  const [selectedDate, setSelectedDate] = React.useState(availableDates[0]);\n  const [direction, setDirection] = React.useState(\"vers BEC\");\n  const [entryExit, setEntryExit] = React.useState(getEntryExitByDate(selectedDate));\n  const [VehiclesPerDate, setVehiclesPerDate] = React.useState(getPostsByDate(selectedDate));\n  const [trafficDataByDay, setTrafficDataByDay] = React.useState(getDataByDirectionDate(direction));\n  const [trafficDataByHour, setTrafficDataByHour] = React.useState(getDataByDirection(direction));\n  const directions = getAllDirections();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDate(new Date().toLocaleDateString());\n      setTime(new Date().toLocaleTimeString());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"flex flex-col space-y-2 h-full w-full\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex justify-between items-center rounded-md p-3 w-full\",\n      sx: {\n        backgroundColor: \"background.paper\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"primary\",\n        fontWeight: \"bold\",\n        children: \"Traffic Analyser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"flex justify-center items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          size: \"small\",\n          value: selectedDate,\n          onChange: e => {\n            setSelectedDate(e.target.value);\n            setVehiclesPerDate(getPostsByDate(e.target.value));\n            setEntryExit(getEntryExitByDate(e.target.value));\n          },\n          children: availableDates.map(date => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: date,\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          size: \"small\",\n          value: direction,\n          onChange: e => {\n            setDirection(e.target.value);\n            setTrafficDataByHour(getDataByDirection(e.target.value));\n            setTrafficDataByDay(getDataByDirectionDate(e.target.value));\n          },\n          children: directions.map(direction => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: direction,\n            children: direction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      id: \"aze\",\n      className: \"flex space-x-3 w-full h-full\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"w-3/4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          fullScreen: false,\n          children: /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Box, {\n      className: \"flex space-x-3 w-full md:h-2/5 h-1/5\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"w-1/4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          chart: SpeedChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"w-1/4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          chart: BarChartExample,\n          data: trafficDataByDay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"w-1/4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          chart: RadarChart,\n          data: entryExit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"4v/5L0Y1gu8q16zoStuQOPS+NuM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Typography","Select","MenuItem","Box","React","useEffect","Card","Map","BarChartExample","RadarChart","SpeedChart","getAllDirections","getDataByDirection","getDataByDirectionDate","getAllDates","getPostsByDate","getEntryExitByDate","Dashboard","date","setDate","useState","Date","toLocaleDateString","value","setValue","availableDates","selectedDate","setSelectedDate","direction","setDirection","entryExit","setEntryExit","VehiclesPerDate","setVehiclesPerDate","trafficDataByDay","setTrafficDataByDay","trafficDataByHour","setTrafficDataByHour","directions","interval","setInterval","setTime","toLocaleTimeString","clearInterval","backgroundColor","e","target","map"],"sources":["C:/Users/achra/OneDrive/Bureau/TrafficAnalyser-main/front/src/components/Dashboard.tsx"],"sourcesContent":["import {\n    ButtonGroup,\n    IconButton,\n    Typography,\n    useTheme,\n    Select,\n    MenuItem,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport Card from \"./Card\";\nimport Map from \"./Map\";\n\nimport BarChartExample from \"./charts/Barcharts\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport RadarChart from \"./charts/Radarcharts\";\nimport SpeedChart from \"./charts/SpeedChart\";\nimport {\n    getAllDirections,\n    getDataByDirection,\n} from \"../services/averageTrafficByHour\";\nimport { getDataByDirectionDate } from \"../services/averageTrafficByDate\";\nimport {\n    getAllDates,\n    getPostsByDate,\n} from \"../services/numberOfVehiclesPerPost\";\nimport { getEntryExitByDate } from \"../services/entryExit\";\n\ntype Props = {\n    onThemeChange: (theme: string) => void;\n};\n\nconst Dashboard = () => {\n    const [date, setDate] = React.useState(new Date().toLocaleDateString());\n    const [value, setValue] = React.useState<Date | null>(new Date());\n    const availableDates = getAllDates();\n    const [selectedDate, setSelectedDate] = React.useState<string>(\n        availableDates[0]\n    );\n\n\n\n    const [direction, setDirection] = React.useState(\"vers BEC\");\n\n    const [entryExit, setEntryExit] = React.useState(\n        getEntryExitByDate(selectedDate)\n    );\n\n    const [VehiclesPerDate, setVehiclesPerDate] = React.useState(\n        getPostsByDate(selectedDate)\n    );\n\n    const [trafficDataByDay, setTrafficDataByDay] = React.useState(\n        getDataByDirectionDate(direction)\n    );\n\n    const [trafficDataByHour, setTrafficDataByHour] = React.useState(\n        getDataByDirection(direction)\n    );\n    const directions = getAllDirections();\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setDate(new Date().toLocaleDateString());\n            setTime(new Date().toLocaleTimeString());\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <Box className=\"flex flex-col space-y-2 h-full w-full\">\n            <Box\n                className=\"flex justify-between items-center rounded-md p-3 w-full\"\n                sx={{\n                    backgroundColor: \"background.paper\",\n                }}\n            >\n                <Typography variant=\"h6\" color=\"primary\" fontWeight=\"bold\">\n                    Traffic Analyser\n                </Typography>\n               \n\n\n\n\n                <Box className=\"flex justify-center items-center space-x-2\">\n                    <Select\n                        size=\"small\"\n                        value={selectedDate}\n                        onChange={(e) => {\n                            setSelectedDate(e.target.value);\n                            setVehiclesPerDate(getPostsByDate(e.target.value));\n                            setEntryExit(getEntryExitByDate(e.target.value));\n                        }}\n                    >\n                        {availableDates.map((date) => (\n                            <MenuItem value={date}>{date}</MenuItem>\n                        ))}\n                    </Select>\n                    <Select\n                        size=\"small\"\n                        value={direction}\n                        onChange={(e) => {\n                            setDirection(e.target.value);\n                            setTrafficDataByHour(\n                                getDataByDirection(e.target.value)\n                            );\n                            setTrafficDataByDay(\n                                getDataByDirectionDate(e.target.value)\n                            );\n                        }}\n                    >\n                        {directions.map((direction) => (\n                            <MenuItem value={direction}>{direction}</MenuItem>\n                        ))}\n                    </Select>\n                </Box>\n\n\n            </Box>\n\n            <Box id=\"aze\" className=\"flex space-x-3 w-full h-full\">\n                <Box className=\"w-3/4\">\n                    <Card fullScreen={false}>\n                        <Map />\n                    </Card>\n                </Box>\n\n            </Box>{\" \"}\n\n            <Box className=\"flex space-x-3 w-full md:h-2/5 h-1/5\">\n\n                <Box className=\"w-1/4\">\n                    <Card chart={SpeedChart} />\n                </Box>\n\n                <Box className=\"w-1/4\">\n                    <Card chart={BarChartExample} data={trafficDataByDay} />\n                </Box>\n\n                <Box className=\"w-1/4\">\n                    <Card chart={RadarChart} data={entryExit} />\n                </Box>\n            </Box>\n\n        </Box>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,SAGIA,UAAU,EAEVC,MAAM,EACNC,QAAQ,QACL,eAAe;AACtB,SAASC,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,GAAG,MAAM,OAAO;AAEvB,OAAOC,eAAe,MAAM,oBAAoB;AAGhD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SACIC,gBAAgB,EAChBC,kBAAkB,QACf,kCAAkC;AACzC,SAASC,sBAAsB,QAAQ,kCAAkC;AACzE,SACIC,WAAW,EACXC,cAAc,QACX,qCAAqC;AAC5C,SAASC,kBAAkB,QAAQ,uBAAuB;AAAC;AAM3D,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,IAAIC,IAAI,EAAE,CAACC,kBAAkB,EAAE,CAAC;EACvE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,KAAK,CAACgB,QAAQ,CAAc,IAAIC,IAAI,EAAE,CAAC;EACjE,MAAMI,cAAc,GAAGX,WAAW,EAAE;EACpC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGvB,KAAK,CAACgB,QAAQ,CAClDK,cAAc,CAAC,CAAC,CAAC,CACpB;EAID,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGzB,KAAK,CAACgB,QAAQ,CAAC,UAAU,CAAC;EAE5D,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAG3B,KAAK,CAACgB,QAAQ,CAC5CJ,kBAAkB,CAACU,YAAY,CAAC,CACnC;EAED,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,KAAK,CAACgB,QAAQ,CACxDL,cAAc,CAACW,YAAY,CAAC,CAC/B;EAED,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,KAAK,CAACgB,QAAQ,CAC1DP,sBAAsB,CAACe,SAAS,CAAC,CACpC;EAED,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjC,KAAK,CAACgB,QAAQ,CAC5DR,kBAAkB,CAACgB,SAAS,CAAC,CAChC;EACD,MAAMU,UAAU,GAAG3B,gBAAgB,EAAE;EAErCN,SAAS,CAAC,MAAM;IACZ,MAAMkC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BrB,OAAO,CAAC,IAAIE,IAAI,EAAE,CAACC,kBAAkB,EAAE,CAAC;MACxCmB,OAAO,CAAC,IAAIpB,IAAI,EAAE,CAACqB,kBAAkB,EAAE,CAAC;IAC5C,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,GAAG;IAAC,SAAS,EAAC,uCAAuC;IAAA,wBAClD,QAAC,GAAG;MACA,SAAS,EAAC,yDAAyD;MACnE,EAAE,EAAE;QACAK,eAAe,EAAE;MACrB,CAAE;MAAA,wBAEF,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAC,KAAK,EAAC,SAAS;QAAC,UAAU,EAAC,MAAM;QAAA,UAAC;MAE3D;QAAA;QAAA;QAAA;MAAA,QAAa,eAMb,QAAC,GAAG;QAAC,SAAS,EAAC,4CAA4C;QAAA,wBACvD,QAAC,MAAM;UACH,IAAI,EAAC,OAAO;UACZ,KAAK,EAAElB,YAAa;UACpB,QAAQ,EAAGmB,CAAC,IAAK;YACblB,eAAe,CAACkB,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC;YAC/BU,kBAAkB,CAAClB,cAAc,CAAC8B,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC,CAAC;YAClDQ,YAAY,CAACf,kBAAkB,CAAC6B,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC,CAAC;UACpD,CAAE;UAAA,UAEDE,cAAc,CAACsB,GAAG,CAAE7B,IAAI,iBACrB,QAAC,QAAQ;YAAC,KAAK,EAAEA,IAAK;YAAA,UAAEA;UAAI;YAAA;YAAA;YAAA;UAAA,QAC/B;QAAC;UAAA;UAAA;UAAA;QAAA,QACG,eACT,QAAC,MAAM;UACH,IAAI,EAAC,OAAO;UACZ,KAAK,EAAEU,SAAU;UACjB,QAAQ,EAAGiB,CAAC,IAAK;YACbhB,YAAY,CAACgB,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC;YAC5Bc,oBAAoB,CAChBzB,kBAAkB,CAACiC,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC,CACrC;YACDY,mBAAmB,CACftB,sBAAsB,CAACgC,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC,CACzC;UACL,CAAE;UAAA,UAEDe,UAAU,CAACS,GAAG,CAAEnB,SAAS,iBACtB,QAAC,QAAQ;YAAC,KAAK,EAAEA,SAAU;YAAA,UAAEA;UAAS;YAAA;YAAA;YAAA;UAAA,QACzC;QAAC;UAAA;UAAA;UAAA;QAAA,QACG;MAAA;QAAA;QAAA;QAAA;MAAA,QACP;IAAA;MAAA;MAAA;MAAA;IAAA,QAGJ,eAEN,QAAC,GAAG;MAAC,EAAE,EAAC,KAAK;MAAC,SAAS,EAAC,8BAA8B;MAAA,uBAClD,QAAC,GAAG;QAAC,SAAS,EAAC,OAAO;QAAA,uBAClB,QAAC,IAAI;UAAC,UAAU,EAAE,KAAM;UAAA,uBACpB,QAAC,GAAG;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA;MACJ;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QAEJ,EAAC,GAAG,eAEV,QAAC,GAAG;MAAC,SAAS,EAAC,sCAAsC;MAAA,wBAEjD,QAAC,GAAG;QAAC,SAAS,EAAC,OAAO;QAAA,uBAClB,QAAC,IAAI;UAAC,KAAK,EAAElB;QAAW;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACzB,eAEN,QAAC,GAAG;QAAC,SAAS,EAAC,OAAO;QAAA,uBAClB,QAAC,IAAI;UAAC,KAAK,EAAEF,eAAgB;UAAC,IAAI,EAAE0B;QAAiB;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACtD,eAEN,QAAC,GAAG;QAAC,SAAS,EAAC,OAAO;QAAA,uBAClB,QAAC,IAAI;UAAC,KAAK,EAAEzB,UAAW;UAAC,IAAI,EAAEqB;QAAU;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC1C;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd,CAAC;AAAC,GAnHIb,SAAS;AAAA,KAATA,SAAS;AAqHf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}